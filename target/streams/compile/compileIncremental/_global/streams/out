[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/home/martin/Bureau/sgit/src/main/scala/app/Tree.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/martin/Bureau/sgit/src/main/scala/app/objects/Blob.scala, /home/martin/Bureau/sgit/src/main/scala/app/objects/Tree.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/home/martin/Bureau/sgit/src/main/scala/app/commands/Add.scala, /home/martin/Bureau/sgit/src/main/scala/app/commands/Branch.scala, /home/martin/Bureau/sgit/src/main/scala/app/FilesIO.scala, /home/martin/Bureau/sgit/src/main/scala/app/commands/Init.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(app.commands.Init, app.commands.Branch, app.Tree, app.FilesIO, app.commands.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(app.commands.Init, app.commands.Branch, app.Tree, app.FilesIO, app.commands.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/martin/Bureau/sgit/src/main/scala/app/commands/Add.scala, /home/martin/Bureau/sgit/src/main/scala/app/FilesIO.scala, /home/martin/Bureau/sgit/src/main/scala/app/commands/Branch.scala, /home/martin/Bureau/sgit/src/main/scala/app/objects/Tree.scala, /home/martin/Bureau/sgit/src/main/scala/app/commands/Init.scala, /home/martin/Bureau/sgit/src/main/scala/app/objects/Blob.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.commands.Init, app.commands.Branch, app.Tree, app.FilesIO, app.commands.Add[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 10 Scala sources to /home/martin/Bureau/sgit/target/scala-2.13/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.0:compile for Scala 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.0:compile for Scala 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 1a9d622f for Scala compiler version 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/martin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.1/scala-library-2.13.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/martin/Bureau/sgit/target/scala-2.13/classes[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 4.822729556 s[0m
[0m[[0m[0mdebug[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.Tree...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.Tree[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.Tree)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.Tree,ModifiedNames(changes = UsedName(productIterator,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(addContentTree,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(set_idTree,[Default]), UsedName(ne,[Default]), UsedName(createId,[Default]), UsedName(==,[Default]), UsedName(productElementName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(productElementNames,[Default]), UsedName(isInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(app;Tree;init;,[Default]), UsedName(unapply,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(apply,[Default]), UsedName(get_contentTree,[Default]), UsedName(set_contentTree,[Default]), UsedName(toString,[Default]), UsedName(get_idTree,[Default]), UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(notify,[Default]), UsedName(Tree,[Default]), UsedName(eq,[Default]), UsedName(productElement,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]))) invalidates 1 classes due to The app.Tree has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(productIterator,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(addContentTree,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(set_idTree,[Default]), UsedName(ne,[Default]), UsedName(createId,[Default]), UsedName(==,[Default]), UsedName(productElementName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(productElementNames,[Default]), UsedName(isInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(app;Tree;init;,[Default]), UsedName(unapply,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(apply,[Default]), UsedName(get_contentTree,[Default]), UsedName(set_contentTree,[Default]), UsedName(toString,[Default]), UsedName(get_idTree,[Default]), UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(notify,[Default]), UsedName(Tree,[Default]), UsedName(eq,[Default]), UsedName(productElement,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.Tree)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.commands.Add...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.commands.Add[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.commands.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of app.Launcher. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.commands.Add,ModifiedNames(changes = UsedName(recursionFiles,[Default]))) invalidates 1 classes due to The app.commands.Add has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(recursionFiles,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.commands.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.objects.Blob...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.objects.Blob[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.objects.Blob)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of app.commands.Add: Set(UsedName(==,[Default]), UsedName(createBlob,[Default]), UsedName(Blob,[Default]), UsedName(equals,[Default]), UsedName(!=,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.objects.Blob,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(createBlob,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(Blob,[Default]), UsedName(equals,[Default]), UsedName(addBlob,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]))) invalidates 2 classes due to The app.objects.Blob has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(createBlob,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(Blob,[Default]), UsedName(equals,[Default]), UsedName(addBlob,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.objects.Blob)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(app.commands.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.objects.Tree...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.objects.Tree[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.objects.Tree)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of app.commands.Add: Set(UsedName(addContentTree,[Default]), UsedName(createId,[Default]), UsedName(==,[Default]), UsedName(equals,[Default]), UsedName(addTree,[Default]), UsedName(apply,[Default]), UsedName(get_contentTree,[Default]), UsedName(set_contentTree,[Default]), UsedName(get_idTree,[Default]), UsedName(!=,[Default]), UsedName(app;objects;Tree;init;,[Default]), UsedName(Tree,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.objects.Tree,ModifiedNames(changes = UsedName(productIterator,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(addContentTree,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(set_idTree,[Default]), UsedName(ne,[Default]), UsedName(createId,[Default]), UsedName(==,[Default]), UsedName(productElementName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(productElementNames,[Default]), UsedName(isInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(unapply,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(addTree,[Default]), UsedName(apply,[Default]), UsedName(get_contentTree,[Default]), UsedName(set_contentTree,[Default]), UsedName(toString,[Default]), UsedName(get_idTree,[Default]), UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(notify,[Default]), UsedName(app;objects;Tree;init;,[Default]), UsedName(Tree,[Default]), UsedName(eq,[Default]), UsedName(productElement,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]))) invalidates 2 classes due to The app.objects.Tree has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(productIterator,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(addContentTree,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(set_idTree,[Default]), UsedName(ne,[Default]), UsedName(createId,[Default]), UsedName(==,[Default]), UsedName(productElementName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(productElementNames,[Default]), UsedName(isInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(unapply,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(addTree,[Default]), UsedName(apply,[Default]), UsedName(get_contentTree,[Default]), UsedName(set_contentTree,[Default]), UsedName(toString,[Default]), UsedName(get_idTree,[Default]), UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(notify,[Default]), UsedName(app;objects;Tree;init;,[Default]), UsedName(Tree,[Default]), UsedName(eq,[Default]), UsedName(productElement,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.objects.Tree)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(app.commands.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.FilesIO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.FilesIO[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.FilesIO)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of app.objects.Blob: Set(UsedName(createBlob,[Default]), UsedName(addBlob,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of app.objects.Tree. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of app.commands.Init: Set(UsedName(initSgitRepository,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.FilesIO,ModifiedNames(changes = UsedName(createBlob,[Default]), UsedName(addBlob,[Default]), UsedName(addTree,[Default]), UsedName(initSgitRepository,[Default]))) invalidates 3 classes due to The app.FilesIO has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(createBlob,[Default]), UsedName(addBlob,[Default]), UsedName(addTree,[Default]), UsedName(initSgitRepository,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.FilesIO)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(app.objects.Blob, app.commands.Init)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.commands.Init...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.commands.Init[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.commands.Init)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of app.Launcher. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.commands.Init,ModifiedNames(changes = UsedName(initSgitRepository,[Default]))) invalidates 1 classes due to The app.commands.Init has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(initSgitRepository,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.commands.Init)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
