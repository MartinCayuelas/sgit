[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/home/martin/Bureau/sgit/src/main/scala/app/objects/EntryTree.scala, /home/martin/Bureau/sgit/src/main/scala/app/objects/Entry.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/martin/Bureau/sgit/src/main/scala/app/objects/Wrapper.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/home/martin/Bureau/sgit/src/main/scala/app/objects/Tree.scala, /home/martin/Bureau/sgit/src/main/scala/app/commands/Commit.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(app.objects.EntryTree, app.objects.Entry, app.objects.Tree, app.commands.Commit)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(app.objects.EntryTree, app.objects.Entry, app.objects.Tree, app.commands.Commit)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/martin/Bureau/sgit/src/main/scala/app/objects/Wrapper.scala, /home/martin/Bureau/sgit/src/main/scala/app/objects/Tree.scala, /home/martin/Bureau/sgit/src/main/scala/app/commands/Commit.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.objects.EntryTree, app.objects.Entry, app.objects.Tree, app.commands.Commit[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 3 Scala sources to /home/martin/Bureau/sgit/target/scala-2.13/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.0:compile for Scala 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.0:compile for Scala 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 4dd0952b for Scala compiler version 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/martin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.1/scala-library-2.13.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/martin/Bureau/sgit/target/scala-2.13/classes:/home/martin/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/pathikrit/better-files_2.13/3.8.0/better-files_2.13-3.8.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 4.019654955 s[0m
[0m[[0m[0mdebug[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.objects.Wrapper...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.objects.Wrapper[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.objects.Wrapper)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of app.objects.Tree: Set(UsedName(get_hash,[Default]), UsedName(path,[Default]), UsedName(toString,[Default]), UsedName(get_path,[Default]), UsedName(==,[Default]), UsedName(get_TypeE,[Default]), UsedName(canEqual,[Default]), UsedName(apply,[Default]), UsedName(Wrapper,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of app.commands.Commit: Set(UsedName(path,[Default]), UsedName(toString,[Default]), UsedName(get_path,[Default]), UsedName(==,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(apply,[Default]), UsedName(Wrapper,[Default]), UsedName(hash,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.objects.Wrapper,ModifiedNames(changes = UsedName(get_hash,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(path,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(get_path,[Default]), UsedName(==,[Default]), UsedName(app;objects;Wrapper;init;,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(get_TypeE,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(copy$default$3,[Default]), UsedName(clone,[Default]), UsedName(Wrapper,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(typeE,[Default]), UsedName(hash,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(productIterator,[Default]))) invalidates 3 classes due to The app.objects.Wrapper has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(get_hash,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(path,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(get_path,[Default]), UsedName(==,[Default]), UsedName(app;objects;Wrapper;init;,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(get_TypeE,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(copy$default$3,[Default]), UsedName(clone,[Default]), UsedName(Wrapper,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(typeE,[Default]), UsedName(hash,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(productIterator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.objects.Wrapper)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(app.objects.Tree, app.commands.Commit)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.objects.Tree...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.objects.Tree[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.objects.Tree)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of app.commands.Commit: Set(UsedName(<init>$default$1,[Default]), UsedName(app;objects;Tree;init;,[Default]), UsedName(saveTreeFile,[Default]), UsedName(createTreeId,[Default]), UsedName(Tree,[Default]), UsedName(get_contentTree,[Default]), UsedName(set_contentTree,[Default]), UsedName(apply,[Default]), UsedName(addElement,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.objects.Tree,ModifiedNames(changes = UsedName(<init>$default$1,[Default]), UsedName(app;objects;Tree;init;,[Default]), UsedName(saveTreeFile,[Default]), UsedName(tupled,[Default]), UsedName(createTreeId,[Default]), UsedName(Tree,[Default]), UsedName(get_contentTree,[Default]), UsedName(set_contentTree,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(apply$default$1,[Default]), UsedName(addElement,[Default]), UsedName(items,[Default]), UsedName(treeContent,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(curried,[Default]))) invalidates 2 classes due to The app.objects.Tree has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(<init>$default$1,[Default]), UsedName(app;objects;Tree;init;,[Default]), UsedName(saveTreeFile,[Default]), UsedName(tupled,[Default]), UsedName(createTreeId,[Default]), UsedName(Tree,[Default]), UsedName(get_contentTree,[Default]), UsedName(set_contentTree,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(apply$default$1,[Default]), UsedName(addElement,[Default]), UsedName(items,[Default]), UsedName(treeContent,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(curried,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.objects.Tree)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(app.commands.Commit)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.objects.Entry...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.objects.Entry[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.objects.Entry)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.objects.Entry,ModifiedNames(changes = UsedName(get_hash,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(path,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(productElement,[Default]), UsedName(app;objects;Entry;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(get_path,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(get_TypeE,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(copy$default$3,[Default]), UsedName(clone,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(typeE,[Default]), UsedName(hash,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(Entry,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(productIterator,[Default]))) invalidates 1 classes due to The app.objects.Entry has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(get_hash,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(path,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(productElement,[Default]), UsedName(app;objects;Entry;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(get_path,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(get_TypeE,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(copy$default$3,[Default]), UsedName(clone,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(typeE,[Default]), UsedName(hash,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productElementNames,[Default]), UsedName(Entry,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(productIterator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.objects.Entry)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.commands.Commit...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.commands.Commit[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.commands.Commit)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of app.Launcher. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.commands.Commit,ModifiedNames(changes = UsedName(addTrees,[Default]), UsedName(createTree,[Default]), UsedName(getDeeperDirectory,[Default]), UsedName(retrieveStageStatus,[Default]))) invalidates 1 classes due to The app.commands.Commit has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(addTrees,[Default]), UsedName(createTree,[Default]), UsedName(getDeeperDirectory,[Default]), UsedName(retrieveStageStatus,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.commands.Commit)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.objects.EntryTree...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.objects.EntryTree[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.objects.EntryTree)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.objects.EntryTree,ModifiedNames(changes = UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(EntryTree,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(id,[Default]), UsedName(equals,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(copy$default$3,[Default]), UsedName(clone,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(get_typeElem,[Default]), UsedName(get_id,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(app;objects;EntryTree;init;,[Default]), UsedName(productElementNames,[Default]), UsedName(filename,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(copy$default$1,[Default]), UsedName(typeElem,[Default]), UsedName(eq,[Default]), UsedName(productIterator,[Default]), UsedName(get_fileName,[Default]))) invalidates 1 classes due to The app.objects.EntryTree has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(EntryTree,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(id,[Default]), UsedName(equals,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(apply,[Default]), UsedName(unapply,[Default]), UsedName(copy$default$3,[Default]), UsedName(clone,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(get_typeElem,[Default]), UsedName(get_id,[Default]), UsedName(##,[Default]), UsedName($isInstanceOf,[Default]), UsedName(app;objects;EntryTree;init;,[Default]), UsedName(productElementNames,[Default]), UsedName(filename,[Default]), UsedName(productElementName,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(copy$default$1,[Default]), UsedName(typeElem,[Default]), UsedName(eq,[Default]), UsedName(productIterator,[Default]), UsedName(get_fileName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.objects.EntryTree)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
