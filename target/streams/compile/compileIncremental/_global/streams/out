[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/home/martin/Bureau/sgit/src/main/scala/app/CommandsForSgit.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/martin/Bureau/sgit/src/main/scala/app/commands/Add.scala, /home/martin/Bureau/sgit/src/main/scala/app/commands/Tag.scala, /home/martin/Bureau/sgit/src/main/scala/app/commands/Branch.scala, /home/martin/Bureau/sgit/src/main/scala/app/commands/Init.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/home/martin/Bureau/sgit/src/main/scala/app/Launcher.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(app.CommandsForSgit, app.Launcher)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(app.CommandsForSgit, app.Launcher)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/martin/Bureau/sgit/src/main/scala/app/commands/Add.scala, /home/martin/Bureau/sgit/src/main/scala/app/commands/Branch.scala, /home/martin/Bureau/sgit/src/main/scala/app/commands/Tag.scala, /home/martin/Bureau/sgit/src/main/scala/app/Launcher.scala, /home/martin/Bureau/sgit/src/main/scala/app/commands/Init.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.CommandsForSgit, app.Launcher[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 9 Scala sources to /home/martin/Bureau/sgit/target/scala-2.13/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.0:compile for Scala 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.0:compile for Scala 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 7e7b1907 for Scala compiler version 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/martin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.1/scala-library-2.13.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/martin/Bureau/sgit/target/scala-2.13/classes[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 4.472199464 s[0m
[0m[[0m[0mdebug[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.commands.Init...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.commands.Init[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.commands.Init)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of app.Launcher: Set(UsedName(equals,[Default]), UsedName(==,[Default]), UsedName(Init,[Default]), UsedName(init,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.commands.Init,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName(Init,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(init,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]))) invalidates 2 classes due to The app.commands.Init has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName(Init,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(init,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.commands.Init)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(app.Launcher)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.commands.Tag...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.commands.Tag[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.commands.Tag)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of app.Launcher: Set(UsedName(tag,[Default]), UsedName(equals,[Default]), UsedName(==,[Default]), UsedName(Tag,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.commands.Tag,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(tag,[Default]), UsedName(eq,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(Tag,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]))) invalidates 2 classes due to The app.commands.Tag has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(tag,[Default]), UsedName(eq,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(Tag,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.commands.Tag)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(app.Launcher)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.commands.Add...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.commands.Add[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.commands.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of app.Launcher: Set(UsedName(equals,[Default]), UsedName(==,[Default]), UsedName(Add,[Default]), UsedName(add,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.commands.Add,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(recursionFiles,[Default]), UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(Add,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(add,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(addRoutine,[Default]))) invalidates 2 classes due to The app.commands.Add has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName($isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(recursionFiles,[Default]), UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(Add,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(add,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(addRoutine,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.commands.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(app.Launcher)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.commands.Branch...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.commands.Branch[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.commands.Branch)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of app.Launcher: Set(UsedName(branch,[Default]), UsedName(equals,[Default]), UsedName(==,[Default]), UsedName(Branch,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.commands.Branch,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName($isInstanceOf,[Default]), UsedName(branch,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(Branch,[Default]))) invalidates 2 classes due to The app.commands.Branch has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName($isInstanceOf,[Default]), UsedName(branch,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(Branch,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.commands.Branch)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(app.Launcher)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from app.CommandsForSgit...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.CommandsForSgit[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(app.CommandsForSgit)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(app.CommandsForSgit,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(tag,[Default]), UsedName(eq,[Default]), UsedName($isInstanceOf,[Default]), UsedName(branch,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(recursionFiles,[Default]), UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(CommandsForSgit,[Default]), UsedName(add,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(init,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(addRoutine,[Default]))) invalidates 1 classes due to The app.CommandsForSgit has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(tag,[Default]), UsedName(eq,[Default]), UsedName($isInstanceOf,[Default]), UsedName(branch,[Default]), UsedName(clone,[Default]), UsedName(equals,[Default]), UsedName(recursionFiles,[Default]), UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(CommandsForSgit,[Default]), UsedName(add,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(init,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(addRoutine,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(app.CommandsForSgit)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(app.Launcher)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: app.Launcher[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
